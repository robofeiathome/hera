<?xml version="1.0"?>
<launch>

  <arg name="robot_name"      default=""/>
  <arg name="map_name"        default="fei_k5"/>
  <arg name="model_name"      default="$(find detector_2d)/models/new_and_old_objects.pt"/>
  <arg name="local_planner"   default="$(find hera_nav)/config/planner/local_planner_teb_params.yaml"/>
  <arg name="resources"       default=""/>

  <arg name="hear"            default="true"/>
  <arg name="talk"            default="true"/>
  <arg name="map"             default="true"/>
  <arg name="people"          default="true"/>
  <arg name="color_filter"    default="true"/>
  <arg name="navigation"      default="true"/>
  <arg name="manipulator"     default="true"/>
  <arg name="objects"         default="true"/>
  <arg name="octomap"         default="true"/>
  <arg name="detector"        default="true"/>
  <arg name="whisper"         default="true"/>
  <arg name="tracker"         default="true"/>
  <arg name="predictor"       default="true"/>
  

  <!-- hear -->
  <group if="$(arg hear)">
    <node name="Server_Speech" pkg="gsr_ros" type="recognition.py" output="screen">
	      <!-- API Options: Google, Sphinx, Wit, Houndify, DeepSpeech-->
    		<param name="API" value="Google" />
    		<param name='KEY1' value=''/>
    		<param name='KEY2' value=''/>
    		<param name="PATH" value="$(find gsr_ros)/src" />
    </node>
  </group>

  <!-- talk -->
  <group if="$(arg talk)">
    <node name="gtts_ros" pkg="gtts_ros" type="gtts_node.py" output="screen">
      <param name="ONLINE" value="true" />
    </node>
  </group>

  <!-- map -->
  <group if="$(arg map)">
    <include file="$(find map)/launch/map.launch">
      <arg name="map_resource" default="$(arg resources)/map/$(arg map_name)"/>
    </include>
  </group>

  <!-- people -->
  <group if="$(arg people)">
    <node name="face_recognition" pkg="hera_face" type="face_recog.py" output="screen">
        <rosparam command="load" file="$(find hera_face)/config/main_cfg.yaml"/>
    </node>
    <node name="face_capture" pkg="hera_face" type="face_capture.py" output="screen">
        <rosparam command="load" file="$(find hera_face)/config/main_cfg.yaml"/>
    </node>
    <node name="face_check" pkg="hera_face" type="face_check.py" output="screen">
        <rosparam command="load" file="$(find hera_face)/config/main_cfg.yaml"/>
    </node>
  </group>

  <!-- color_filter -->
  <group if="$(arg color_filter)">
    <node name ="color_filter" pkg="hera_face" type="blob_detection.py" output="screen"/>
  </group>

  <!-- navigation -->
  <group if="$(arg navigation)">

    <node pkg="hera_control" type="utils.py" name="robot_base_utils">
      <param name="enable_clear_costmap" value="true"/>
      <param name="enable_amcl_update" value="true"/>
      <param name="clear_costmap_period" value="10"/>
      <param name="amcl_updates" value="10"/>
    </node> 

    <include file="$(find hera_nav)/launch/amcl.launch" />

    <include file="$(find hera_nav)/launch/move_base.launch">
      <arg name="local_planner" default="$(arg local_planner)"/>
    </include>

    <include file="$(find hera_nav)/launch/robot_skills.launch">
      <arg name="map_name" default="$(arg map_name)"/>
    </include>


  </group>

  <!-- manipulator -->
  <group if="$(arg manipulator)">  
    <include file="$(find hera_moveit_config)/launch/moveit_planning.launch" />
    <node name ="manipulator" pkg="hera_control" type="manipulator.py" output="screen"/>
  </group>

<!-- objects -->
  <group if="$(arg objects)">
    <include file="$(find hera_objects)/launch/objects.launch" />
  </group>

  <!-- octomap -->
  <group if="$(arg octomap)">
    <include ns="move_group" file="$(find hera_moveit_config)/launch/sensor_manager.launch.xml">
      <arg name="moveit_sensor_manager" value="hera" />
    </include>
  </group>

  <group if="$(arg detector)">
    <include file="$(find detector_2d)/launch/detector.launch">
      <arg name="model" default="$(arg model_name)"/>
    </include>
  </group>

  <group if="$(arg tracker)">
    <include file="$(find hera_tracker)/launch/super_flow.launch"/>
  </group>

  <group if="$(arg whisper)">
    <include file="$(find hera_speech)/launch/speech_services.launch"/>
  </group>

  <group if="$(arg predictor)">
    <include file="$(find detector_2d)/launch/predictor.launch"/>
  </group>

</launch>
