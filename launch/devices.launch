<?xml version="1.0"?>
<launch>

    <!-- devices config -->
    <arg name="enable_base"         default="true"/>
    <arg name="enable_laser_front"  default="true"/>
    <arg name="enable_laser_back"   default="true"/>
    <arg name="enable_xtion"        default="true"/>
    <arg name="enable_kinect"       default="true"/>
    <arg name="enable_dynamixel"    default="true"/>
    <arg name="enable_camera"    default="true"/>
    <arg name="enable_zed_wrapper"  default="true"/>

  <!-- base -->
  <group if="$(arg enable_base)" >
    <!-- arduino -->
    <node name="serial_node" pkg="rosserial_python" type="serial_node.py" output="screen">
      <param name="port" value="/dev/base"/>
      <param name="baud" value="57600"/>
    </node>

    <!-- odom -->
    <node pkg="hera_control" type="odom.py" name="robot_base_odom"/>
    <!-- <node pkg="hera_control" type="utils.py" name="robot_base_utils">
      <param name="enable_clear_costmap" value="True"/>
      <param name="enable_amcl_update" value="True"/>
      <param name="clear_costmap_period" value="10"/>
      <param name="amcl_updates" value="10"/>
    </node>  -->
  </group>

  <!-- laser front -->
  <group if="$(arg enable_laser_front)" >
      <node name="hokuyo_node" pkg="hokuyo_node" type="hokuyo_node" >
      <remap from="scan" to="base_scan_front" />
      <param name="port" value="/dev/front_laser"/>
      <param name="frame_id" value="base_scan_front"/>
      <param name="min_ang" value="-1.45"/>
      <param name="max_ang" value="1.45"/>
    </node>
  </group>

  <!-- laser back -->
  <group if="$(arg enable_laser_back)" >
    <node name="hokuyo_node_back" pkg="hokuyo_node" type="hokuyo_node" >
      <remap from="scan" to="base_scan_back" />
      <param name="port" value="/dev/back_laser"/>
      <param name="frame_id" value="base_scan_back"/>
      <param name="min_ang" value="-0.78"/>
      <param name="max_ang" value="0.78"/>
    </node>
  </group>

  <!-- xtion -->
  <group if="$(arg enable_xtion)" >
     <include file="$(find openni2_launch)/launch/openni2.launch" >
      <arg name="camera" default="xtion" />
      <arg name="device_id" default="1@X" />
    </include>
  </group>

  <!-- Camera -->
  <group if="$(arg enable_camera)" > 
      <include file="$(find usb_cam)/launch/usb_cam-test.launch">
      </include>
  </group>


  <!-- kinect -->
  <group if="$(arg enable_kinect)" > 
      <include file="$(find freenect_launch)/launch/freenect.launch">
      	<arg name="camera" default="kinect_one" />
        <!-- <arg name="rgb_frame_id" default="kinect_one_optical" />
        <arg name="depth_frame_id" default="kinect_one_depth" /> -->
      	<arg name="publish_tf" default="true" />
        <!--<arg name="device_id" default="1@X" /> -->
      </include>
  </group>

  <!-- dynamixel -->
  <group if="$(arg enable_dynamixel)" >
      <include file="$(find hera_control)/launch/dynamixel_controller.launch"/>
  </group>


  <group if="$(arg enable_zed_wrapper)" > 
      <include file="$(find zed_wrapper)/launch/zed2.launch"></include>
  </group>

</launch>
